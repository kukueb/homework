class User:
    def __init__(self,name, health, damage):
        self.health = health
        self.damage = damage
        self.name = name
    def damage_take(self, enemy_damage):
        self.health -= enemy_damage
        print(f'Персонажа {self.name} поразили на {enemy_damage}, у него осталось {self.health} здоровья')
    def damage_deal(self, enemy):
        if enemy.health <= 0 or self.damage >= self.health:
            self.health = 0
            print(f'Персонаж {enemy.name} был повержен.')
        else:
            enemy.damage_take(self.damage)


class Magician(User):
    def __init__(self,name, health, damage):
        super().__init__(name, health, damage)

    def damage_take(self, enemy_damage):
        super().damage_take(enemy_damage * 1.5)


class Archer(User):
    def __init__(self,name, health, damage):
        super().__init__(name, health, damage)

    def damage_take(self, enemy_damage):
        super().damage_take(enemy_damage * 1.2)


class Warrior(User):
    def __init__(self,name, health, damage):
        super().__init__(name, health, damage)

    def damage_take(self, enemy_damage):
        super().damage_take(enemy_damage * 0.6)



user1 = Magician('Анатолий', 300, 50)
user2 = Warrior('Олежа', 300, 30)


for i in range(8):
    user2.damage_deal(user1)

